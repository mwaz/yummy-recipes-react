// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Recipes component renders properly without crashing 1`] = `
<div>
  <div
    style={
      Object {
        "background": "grey",
        "backgroundColor": "#EEEEEE",
        "color": "white",
      }
    }
  >
    <NavigationBar />
  </div>
  <div
    className="empty-div"
  />
  <div
    className="categories-parent-background"
  >
    <div
      className="categories-container"
    >
      <div
        className="grid"
      >
        <ToastContainer
          autoClose={5000}
          bodyClassName=""
          className={null}
          closeButton={
            <DefaultCloseButton
              ariaLabel="close"
            />
          }
          closeOnClick={true}
          hideProgressBar={false}
          newestOnTop={false}
          pauseOnHover={true}
          position="top-right"
          progressClassName=""
          style={null}
          toastClassName=""
          transition={[Function]}
        />
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Col
            bsClass="col"
            componentClass="div"
            sm={12}
          >
            <Breadcrumb
              bsClass="breadcrumb"
            >
              <BreadcrumbItem
                active={false}
                href="/categories"
              >
                Categories
              </BreadcrumbItem>
              <BreadcrumbItem
                active={true}
                href="#"
              >
                /Recipes/
              </BreadcrumbItem>
            </Breadcrumb>
          </Col>
        </Row>
        <Form
          bsClass="form"
          componentClass="form"
          horizontal={false}
          inline={false}
          onSubmit={[Function]}
        >
          <Row
            bsClass="row"
            componentClass="div"
            style={
              Object {
                "float": "right",
              }
            }
          >
            <Col
              bsClass="col"
              componentClass="div"
              sm={8}
            >
              <input
                className="form-control"
                id="mysearch"
                onChange={[Function]}
                placeholder="search categories"
                type="search"
              />
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              sm={3}
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="info"
                disabled={false}
                onClick={[Function]}
              >
                Search 
              </Button>
            </Col>
          </Row>
        </Form>
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Col
            bsClass="col"
            componentClass="div"
            sm={4}
          >
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsStyle="info"
              className="add-categories-btn"
              disabled={false}
              onClick={[Function]}
            >
               
              <span>
                 Add recipes 
              </span>
               
            </Button>
          </Col>
        </Row>
        <div>
          <Modal
            animation={true}
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            className="modal-fade"
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            location={Object {}}
            manager={
              ModalManager {
                "add": [Function],
                "containers": Array [],
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": Array [],
                "remove": [Function],
              }
            }
            match={
              Object {
                "params": Object {
                  "id": 1,
                },
              }
            }
            onHide={[Function]}
            recipes={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
          >
            <ModalHeader
              bsClass="modal-header"
              closeButton={false}
              closeLabel="Close"
            >
              <ModalTitle
                bsClass="modal-title"
                componentClass="h4"
                id="contained-modal-title-sm"
              >
                Add Recipes
              </ModalTitle>
            </ModalHeader>
            <Form
              bsClass="form"
              className="form-horizontal"
              componentClass="form"
              horizontal={false}
              inline={false}
              role="form"
            >
              <ModalBody
                bsClass="modal-body"
                componentClass="div"
              >
                <div
                  className="form-group"
                >
                  <label
                    className="col-md-6 control-label"
                    htmlFor="recipe_name"
                  >
                    Recipe Name
                  </label>
                  <div
                    className="col-md-12"
                  >
                    <input
                      className="form-control"
                      id="new_Cat"
                      onChange={[Function]}
                      placeholder="Recipe Name"
                      type="text"
                    />
                  </div>
                  <label
                    className="col-md-6 control-label"
                    htmlFor="recipe_ingredients"
                  >
                    Recipe Ingredients
                  </label>
                  <div
                    className="col-md-12"
                  >
                    <textarea
                      className="form-control"
                      cols="50"
                      id="new_Cat"
                      onChange={[Function]}
                      placeholder="Recipe Ingredients"
                      rows="4"
                    />
                  </div>
                  <label
                    className="col-md-6 control-label"
                    htmlFor="recipe_methods"
                  >
                    Recipe Methods
                  </label>
                  <div
                    className="col-md-12"
                  >
                    <textarea
                      className="form-control"
                      cols="50"
                      id="new_Cat"
                      onChange={[Function]}
                      placeholder="Recipe Cooking Methods"
                      rows="4"
                    />
                  </div>
                </div>
              </ModalBody>
              <ModalFooter
                bsClass="modal-footer"
                componentClass="div"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="info"
                  disabled={false}
                  onClick={[Function]}
                >
                  Add Recipe
                </Button>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="danger"
                  disabled={false}
                  onClick={[Function]}
                >
                  Cancel
                </Button>
              </ModalFooter>
            </Form>
          </Modal>
          <Modal
            animation={true}
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            className="modal-fade"
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
              ModalManager {
                "add": [Function],
                "containers": Array [],
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": Array [],
                "remove": [Function],
              }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
          >
            <form
              onSubmit={[Function]}
            >
              <ModalHeader
                bsClass="modal-header"
                closeButton={false}
                closeLabel="Close"
                onClick={[Function]}
              >
                <ModalTitle
                  bsClass="modal-title"
                  componentClass="h4"
                >
                   Are you sure you want to delete this recipe? 
                </ModalTitle>
              </ModalHeader>
              <ModalBody
                bsClass="modal-body"
                componentClass="div"
              >
                <center>
                   
                   
                </center>
              </ModalBody>
              <ModalFooter
                bsClass="modal-footer"
                componentClass="div"
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="info"
                  disabled={false}
                  onClick={[Function]}
                >
                  Cancel
                </Button>
                <InputGroupButton
                  bsClass="input-group-btn"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="danger"
                    disabled={false}
                    type="submit"
                  >
                    delete
                  </Button>
                </InputGroupButton>
              </ModalFooter>
            </form>
          </Modal>
          <Modal
            animation={true}
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            className="modal-fade"
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
              ModalManager {
                "add": [Function],
                "containers": Array [],
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": Array [],
                "remove": [Function],
              }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
          >
            <form
              onSubmit={[Function]}
            >
              <ModalHeader
                bsClass="modal-header"
                closeButton={false}
                closeLabel="Close"
                onClick={[Function]}
              >
                <ModalTitle
                  bsClass="modal-title"
                  componentClass="h4"
                >
                   Update Recipe  
                </ModalTitle>
              </ModalHeader>
              <ModalBody
                bsClass="modal-body"
                componentClass="div"
              >
                <div
                  className="form-group"
                >
                  <label
                    className="col-md-6 control-label"
                    htmlFor="recipe_name"
                  >
                    Recipe Name
                  </label>
                  <div
                    className="col-md-12"
                  >
                    <input
                      className="form-control"
                      id="new_Cat"
                      onChange={[Function]}
                      placeholder=""
                      type="text"
                      value=""
                    />
                  </div>
                  <label
                    className="col-md-6 control-label"
                    htmlFor="recipe_ingredients"
                  >
                    Recipe Ingredients
                  </label>
                  <div
                    className="col-md-12"
                  >
                    <textarea
                      className="form-control"
                      cols="50"
                      id="new_Cat"
                      onChange={[Function]}
                      placeholder=""
                      rows="4"
                      value=""
                    />
                  </div>
                  <label
                    className="col-md-6 control-label"
                    htmlFor="recipe_methods"
                  >
                    Recipe Methods
                  </label>
                  <div
                    className="col-md-12"
                  >
                    <textarea
                      className="form-control"
                      cols="50"
                      id="new_Cat"
                      onChange={[Function]}
                      placeholder=""
                      rows="4"
                      value=""
                    />
                  </div>
                </div>
              </ModalBody>
              <ModalFooter
                bsClass="modal-footer"
                componentClass="div"
              >
                <InputGroupButton
                  bsClass="input-group-btn"
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsStyle="success"
                    disabled={false}
                    onClick={[Function]}
                    type="submit"
                  >
                    Update
                  </Button>
                </InputGroupButton>
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsStyle="info"
                  disabled={false}
                  onClick={[Function]}
                >
                   Cancel
                </Button>
              </ModalFooter>
            </form>
          </Modal>
          <Modal
            animation={true}
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            className="modal-fade"
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
              ModalManager {
                "add": [Function],
                "containers": Array [],
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": Array [],
                "remove": [Function],
              }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
          >
            <ModalHeader
              bsClass="modal-header"
              closeButton={false}
              closeLabel="Close"
              onClick={[Function]}
            >
              <ModalTitle
                bsClass="modal-title"
                componentClass="h4"
              >
                 View Recipe Details 
              </ModalTitle>
            </ModalHeader>
            <ModalBody
              bsClass="modal-body"
              componentClass="div"
            >
              <div
                className="form-group"
              >
                <label
                  className="col-md-6 control-label"
                  htmlFor="recipe_name"
                >
                  Recipe Name
                </label>
                <div
                  className="col-md-12"
                >
                  <input
                    className="form-control"
                    id="new_Cat"
                    readonly=""
                    type="text"
                    value=""
                  />
                </div>
                <label
                  className="col-md-6 control-label"
                  htmlFor="recipe_ingredients"
                >
                  Recipe Ingredients
                </label>
                <div
                  className="col-md-12"
                >
                  <textarea
                    className="form-control"
                    cols="50"
                    id="new_Cat"
                    readonly=""
                    rows="4"
                    value=""
                  />
                </div>
                <label
                  className="col-md-6 control-label"
                  htmlFor="recipe_methods"
                >
                  Recipe Methods
                </label>
                <div
                  className="col-md-12"
                >
                  <textarea
                    className="form-control"
                    cols="50"
                    id="new_Cat"
                    readonly=""
                    rows="4"
                    value=""
                  />
                </div>
              </div>
            </ModalBody>
            <ModalFooter
              bsClass="modal-footer"
              componentClass="div"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="info"
                disabled={false}
                onClick={[Function]}
              >
                 Close 
              </Button>
            </ModalFooter>
          </Modal>
        </div>
        <Row
          bsClass="row"
          componentClass="div"
        />
        <div
          className="alert alert-danger"
        >
          No recipes found on this land, kindly add them 
        </div>
        <Paginator
          next={[Function]}
          previous={[Function]}
        />
      </div>
    </div>
  </div>
  <div
    className="empty-div"
  />
  <Footer />
</div>
`;
