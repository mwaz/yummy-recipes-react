// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReusableModal component renders properly without crashing 1`] = `
<Modal
  animation={true}
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  className="modal-fade"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={false}
>
  <form>
    <ModalHeader
      bsClass="modal-header"
      closeButton={false}
      closeLabel="Close"
    >
      <ModalTitle
        bsClass="modal-title"
        componentClass="h4"
      >
         
          
      </ModalTitle>
    </ModalHeader>
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <div
        className="form-group"
      >
        <label
          className="col-md-4 control-label"
          htmlFor="Category_name"
        >
          Category Name
        </label>
        <div
          className="col-md-8"
        >
          <input
            className="form-control"
            id="new_cat"
            type="text"
          />
        </div>
      </div>
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="info"
        disabled={false}
        id="add-update"
        type="submit"
      >
         
         
      </Button>
      <Button
        active={false}
        block={false}
        bsClass="btn"
        bsStyle="danger"
        disabled={false}
        id="cancel"
      >
         Cancel
      </Button>
    </ModalFooter>
  </form>
</Modal>
`;

exports[`ReusableModal component test that modal accepts props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Categories
    category_name={
        Object {
            "category_name": "category_name",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          style={
                    Object {
                              "background": "grey",
                              "backgroundColor": "#EEEEEE",
                              "color": "white",
                            }
          }
>
          <NavigationBar />
</div>,
        <div
          className="empty-div"
/>,
        <div
          className="categories-parent-background"
>
          <div
                    className="categories-container"
          >
                    <div
                              className="grid"
                    >
                              <ToastContainer
                                        autoClose={5000}
                                        bodyClassName=""
                                        className={null}
                                        closeButton={
                                                  <DefaultCloseButton
                                                            ariaLabel="close"
                                                  />
                                        }
                                        closeOnClick={true}
                                        hideProgressBar={false}
                                        newestOnTop={false}
                                        pauseOnHover={true}
                                        position="top-right"
                                        progressClassName=""
                                        style={null}
                                        toastClassName=""
                                        transition={[Function]}
                              />
                              <BreadCrumbComponent
                                        active_item="Categories/"
                              />
                              <SearchForm
                                        name_change={[Function]}
                                        search={[Function]}
                                        search_event={[Function]}
                                        search_placeholder="Search Categories"
                              />
                              <Row
                                        bsClass="row"
                                        componentClass="div"
                              >
                                        <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  sm={4}
                                        >
                                                  <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="info"
                                                            className="add-categories-btn"
                                                            disabled={false}
                                                            onClick={[Function]}
                                                  >
                                                             
                                                            <span>
                                                                       Add recipe category 
                                                            </span>
                                                             
                                                  </Button>
                                        </Col>
                              </Row>
                              <div>
                                        <ReusableModal
                                                  btn_name="Add Category"
                                                  category_placeholder=" Category Name "
                                                  category_state="Add Category"
                                                  current_state={[Function]}
                                                  method={[Function]}
                                                  method_state={false}
                                                  onChange={[Function]}
                                        />
                                        <DeleteComponent
                                                  click_state={[Function]}
                                                  form_submit={[Function]}
                                                  item_state=""
                                                  modal_header={[Function]}
                                                  modal_title="Are you sure you want to delete this category?"
                                                  view_modal={undefined}
                                        />
                                        <ReusableModal
                                                  btn_name="Update"
                                                  category_placeholder=""
                                                  category_state="Edit Category"
                                                  category_value=""
                                                  current_state={[Function]}
                                                  method={[Function]}
                                                  method_state={undefined}
                                                  onChange={[Function]}
                                        />
                              </div>
                              <Row
                                        bsClass="row"
                                        componentClass="div"
                              >
                                        
                              </Row>
                              <div
                                        className="alert alert-danger"
                              >
                                        No categories on this land, kindly add them 
                              </div>
                              <Paginator
                                        next={[Function]}
                                        previous={[Function]}
                              />
                    </div>
          </div>
</div>,
        <div
          className="empty-div"
/>,
        <Footer />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <NavigationBar />,
          "style": Object {
            "background": "grey",
            "backgroundColor": "#EEEEEE",
            "color": "white",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "empty-div",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="categories-container"
>
            <div
                        className="grid"
            >
                        <ToastContainer
                                    autoClose={5000}
                                    bodyClassName=""
                                    className={null}
                                    closeButton={
                                                <DefaultCloseButton
                                                            ariaLabel="close"
                                                />
                                    }
                                    closeOnClick={true}
                                    hideProgressBar={false}
                                    newestOnTop={false}
                                    pauseOnHover={true}
                                    position="top-right"
                                    progressClassName=""
                                    style={null}
                                    toastClassName=""
                                    transition={[Function]}
                        />
                        <BreadCrumbComponent
                                    active_item="Categories/"
                        />
                        <SearchForm
                                    name_change={[Function]}
                                    search={[Function]}
                                    search_event={[Function]}
                                    search_placeholder="Search Categories"
                        />
                        <Row
                                    bsClass="row"
                                    componentClass="div"
                        >
                                    <Col
                                                bsClass="col"
                                                componentClass="div"
                                                sm={4}
                                    >
                                                <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="info"
                                                            className="add-categories-btn"
                                                            disabled={false}
                                                            onClick={[Function]}
                                                >
                                                             
                                                            <span>
                                                                         Add recipe category 
                                                            </span>
                                                             
                                                </Button>
                                    </Col>
                        </Row>
                        <div>
                                    <ReusableModal
                                                btn_name="Add Category"
                                                category_placeholder=" Category Name "
                                                category_state="Add Category"
                                                current_state={[Function]}
                                                method={[Function]}
                                                method_state={false}
                                                onChange={[Function]}
                                    />
                                    <DeleteComponent
                                                click_state={[Function]}
                                                form_submit={[Function]}
                                                item_state=""
                                                modal_header={[Function]}
                                                modal_title="Are you sure you want to delete this category?"
                                                view_modal={undefined}
                                    />
                                    <ReusableModal
                                                btn_name="Update"
                                                category_placeholder=""
                                                category_state="Edit Category"
                                                category_value=""
                                                current_state={[Function]}
                                                method={[Function]}
                                                method_state={undefined}
                                                onChange={[Function]}
                                    />
                        </div>
                        <Row
                                    bsClass="row"
                                    componentClass="div"
                        >
                                    
                        </Row>
                        <div
                                    className="alert alert-danger"
                        >
                                    No categories on this land, kindly add them 
                        </div>
                        <Paginator
                                    next={[Function]}
                                    previous={[Function]}
                        />
            </div>
</div>,
          "className": "categories-parent-background",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="grid"
>
              <ToastContainer
                            autoClose={5000}
                            bodyClassName=""
                            className={null}
                            closeButton={
                                          <DefaultCloseButton
                                                        ariaLabel="close"
                                          />
                            }
                            closeOnClick={true}
                            hideProgressBar={false}
                            newestOnTop={false}
                            pauseOnHover={true}
                            position="top-right"
                            progressClassName=""
                            style={null}
                            toastClassName=""
                            transition={[Function]}
              />
              <BreadCrumbComponent
                            active_item="Categories/"
              />
              <SearchForm
                            name_change={[Function]}
                            search={[Function]}
                            search_event={[Function]}
                            search_placeholder="Search Categories"
              />
              <Row
                            bsClass="row"
                            componentClass="div"
              >
                            <Col
                                          bsClass="col"
                                          componentClass="div"
                                          sm={4}
                            >
                                          <Button
                                                        active={false}
                                                        block={false}
                                                        bsClass="btn"
                                                        bsStyle="info"
                                                        className="add-categories-btn"
                                                        disabled={false}
                                                        onClick={[Function]}
                                          >
                                                         
                                                        <span>
                                                                       Add recipe category 
                                                        </span>
                                                         
                                          </Button>
                            </Col>
              </Row>
              <div>
                            <ReusableModal
                                          btn_name="Add Category"
                                          category_placeholder=" Category Name "
                                          category_state="Add Category"
                                          current_state={[Function]}
                                          method={[Function]}
                                          method_state={false}
                                          onChange={[Function]}
                            />
                            <DeleteComponent
                                          click_state={[Function]}
                                          form_submit={[Function]}
                                          item_state=""
                                          modal_header={[Function]}
                                          modal_title="Are you sure you want to delete this category?"
                                          view_modal={undefined}
                            />
                            <ReusableModal
                                          btn_name="Update"
                                          category_placeholder=""
                                          category_state="Edit Category"
                                          category_value=""
                                          current_state={[Function]}
                                          method={[Function]}
                                          method_state={undefined}
                                          onChange={[Function]}
                            />
              </div>
              <Row
                            bsClass="row"
                            componentClass="div"
              >
                            
              </Row>
              <div
                            className="alert alert-danger"
              >
                            No categories on this land, kindly add them 
              </div>
              <Paginator
                            next={[Function]}
                            previous={[Function]}
              />
</div>,
            "className": "categories-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <ToastContainer
                  autoClose={5000}
                  bodyClassName=""
                  className={null}
                  closeButton={
                                    <DefaultCloseButton
                                                      ariaLabel="close"
                                    />
                  }
                  closeOnClick={true}
                  hideProgressBar={false}
                  newestOnTop={false}
                  pauseOnHover={true}
                  position="top-right"
                  progressClassName=""
                  style={null}
                  toastClassName=""
                  transition={[Function]}
/>,
                <BreadCrumbComponent
                  active_item="Categories/"
/>,
                <SearchForm
                  name_change={[Function]}
                  search={[Function]}
                  search_event={[Function]}
                  search_placeholder="Search Categories"
/>,
                <Row
                  bsClass="row"
                  componentClass="div"
>
                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    sm={4}
                  >
                                    <Button
                                                      active={false}
                                                      block={false}
                                                      bsClass="btn"
                                                      bsStyle="info"
                                                      className="add-categories-btn"
                                                      disabled={false}
                                                      onClick={[Function]}
                                    >
                                                       
                                                      <span>
                                                                         Add recipe category 
                                                      </span>
                                                       
                                    </Button>
                  </Col>
</Row>,
                <div>
                  <ReusableModal
                                    btn_name="Add Category"
                                    category_placeholder=" Category Name "
                                    category_state="Add Category"
                                    current_state={[Function]}
                                    method={[Function]}
                                    method_state={false}
                                    onChange={[Function]}
                  />
                  <DeleteComponent
                                    click_state={[Function]}
                                    form_submit={[Function]}
                                    item_state=""
                                    modal_header={[Function]}
                                    modal_title="Are you sure you want to delete this category?"
                                    view_modal={undefined}
                  />
                  <ReusableModal
                                    btn_name="Update"
                                    category_placeholder=""
                                    category_state="Edit Category"
                                    category_value=""
                                    current_state={[Function]}
                                    method={[Function]}
                                    method_state={undefined}
                                    onChange={[Function]}
                  />
</div>,
                <Row
                  bsClass="row"
                  componentClass="div"
>
                  
</Row>,
                <div
                  className="alert alert-danger"
>
                  No categories on this land, kindly add them 
</div>,
                <Paginator
                  next={[Function]}
                  previous={[Function]}
/>,
              ],
              "className": "grid",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoClose": 5000,
                  "bodyClassName": "",
                  "className": null,
                  "closeButton": <DefaultCloseButton
                    ariaLabel="close"
/>,
                  "closeOnClick": true,
                  "hideProgressBar": false,
                  "newestOnTop": false,
                  "pauseOnHover": true,
                  "position": "top-right",
                  "progressClassName": "",
                  "style": null,
                  "toastClassName": "",
                  "transition": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "active_item": "Categories/",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "name_change": [Function],
                  "search": [Function],
                  "search_event": [Function],
                  "search_placeholder": "Search Categories",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "row",
                  "children": <Col
                    bsClass="col"
                    componentClass="div"
                    sm={4}
>
                    <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="info"
                                        className="add-categories-btn"
                                        disabled={false}
                                        onClick={[Function]}
                    >
                                         
                                        <span>
                                                             Add recipe category 
                                        </span>
                                         
                    </Button>
</Col>,
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="info"
                      className="add-categories-btn"
                      disabled={false}
                      onClick={[Function]}
>
                       
                      <span>
                                             Add recipe category 
                      </span>
                       
</Button>,
                    "componentClass": "div",
                    "sm": 4,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "active": false,
                      "block": false,
                      "bsClass": "btn",
                      "bsStyle": "info",
                      "children": Array [
                        " ",
                        <span>
                           Add recipe category 
</span>,
                        " ",
                      ],
                      "className": "add-categories-btn",
                      "disabled": false,
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      " ",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": " Add recipe category ",
                        },
                        "ref": null,
                        "rendered": " Add recipe category ",
                        "type": "span",
                      },
                      " ",
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <ReusableModal
                      btn_name="Add Category"
                      category_placeholder=" Category Name "
                      category_state="Add Category"
                      current_state={[Function]}
                      method={[Function]}
                      method_state={false}
                      onChange={[Function]}
/>,
                    <DeleteComponent
                      click_state={[Function]}
                      form_submit={[Function]}
                      item_state=""
                      modal_header={[Function]}
                      modal_title="Are you sure you want to delete this category?"
                      view_modal={undefined}
/>,
                    <ReusableModal
                      btn_name="Update"
                      category_placeholder=""
                      category_state="Edit Category"
                      category_value=""
                      current_state={[Function]}
                      method={[Function]}
                      method_state={undefined}
                      onChange={[Function]}
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "btn_name": "Add Category",
                      "category_placeholder": " Category Name ",
                      "category_state": "Add Category",
                      "current_state": [Function],
                      "method": [Function],
                      "method_state": false,
                      "onChange": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "click_state": [Function],
                      "form_submit": [Function],
                      "item_state": "",
                      "modal_header": [Function],
                      "modal_title": "Are you sure you want to delete this category?",
                      "view_modal": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "btn_name": "Update",
                      "category_placeholder": "",
                      "category_state": "Edit Category",
                      "category_value": "",
                      "current_state": [Function],
                      "method": [Function],
                      "method_state": undefined,
                      "onChange": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "row",
                  "children": Array [],
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Array [],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "No categories on this land, kindly add them ",
                  "className": "alert alert-danger",
                },
                "ref": null,
                "rendered": "No categories on this land, kindly add them ",
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "next": [Function],
                  "previous": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "empty-div",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            style={
                        Object {
                                    "background": "grey",
                                    "backgroundColor": "#EEEEEE",
                                    "color": "white",
                                  }
            }
>
            <NavigationBar />
</div>,
          <div
            className="empty-div"
/>,
          <div
            className="categories-parent-background"
>
            <div
                        className="categories-container"
            >
                        <div
                                    className="grid"
                        >
                                    <ToastContainer
                                                autoClose={5000}
                                                bodyClassName=""
                                                className={null}
                                                closeButton={
                                                            <DefaultCloseButton
                                                                        ariaLabel="close"
                                                            />
                                                }
                                                closeOnClick={true}
                                                hideProgressBar={false}
                                                newestOnTop={false}
                                                pauseOnHover={true}
                                                position="top-right"
                                                progressClassName=""
                                                style={null}
                                                toastClassName=""
                                                transition={[Function]}
                                    />
                                    <BreadCrumbComponent
                                                active_item="Categories/"
                                    />
                                    <SearchForm
                                                name_change={[Function]}
                                                search={[Function]}
                                                search_event={[Function]}
                                                search_placeholder="Search Categories"
                                    />
                                    <Row
                                                bsClass="row"
                                                componentClass="div"
                                    >
                                                <Col
                                                            bsClass="col"
                                                            componentClass="div"
                                                            sm={4}
                                                >
                                                            <Button
                                                                        active={false}
                                                                        block={false}
                                                                        bsClass="btn"
                                                                        bsStyle="info"
                                                                        className="add-categories-btn"
                                                                        disabled={false}
                                                                        onClick={[Function]}
                                                            >
                                                                         
                                                                        <span>
                                                                                     Add recipe category 
                                                                        </span>
                                                                         
                                                            </Button>
                                                </Col>
                                    </Row>
                                    <div>
                                                <ReusableModal
                                                            btn_name="Add Category"
                                                            category_placeholder=" Category Name "
                                                            category_state="Add Category"
                                                            current_state={[Function]}
                                                            method={[Function]}
                                                            method_state={false}
                                                            onChange={[Function]}
                                                />
                                                <DeleteComponent
                                                            click_state={[Function]}
                                                            form_submit={[Function]}
                                                            item_state=""
                                                            modal_header={[Function]}
                                                            modal_title="Are you sure you want to delete this category?"
                                                            view_modal={undefined}
                                                />
                                                <ReusableModal
                                                            btn_name="Update"
                                                            category_placeholder=""
                                                            category_state="Edit Category"
                                                            category_value=""
                                                            current_state={[Function]}
                                                            method={[Function]}
                                                            method_state={undefined}
                                                            onChange={[Function]}
                                                />
                                    </div>
                                    <Row
                                                bsClass="row"
                                                componentClass="div"
                                    >
                                                
                                    </Row>
                                    <div
                                                className="alert alert-danger"
                                    >
                                                No categories on this land, kindly add them 
                                    </div>
                                    <Paginator
                                                next={[Function]}
                                                previous={[Function]}
                                    />
                        </div>
            </div>
</div>,
          <div
            className="empty-div"
/>,
          <Footer />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <NavigationBar />,
            "style": Object {
              "background": "grey",
              "backgroundColor": "#EEEEEE",
              "color": "white",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "empty-div",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="categories-container"
>
              <div
                            className="grid"
              >
                            <ToastContainer
                                          autoClose={5000}
                                          bodyClassName=""
                                          className={null}
                                          closeButton={
                                                        <DefaultCloseButton
                                                                      ariaLabel="close"
                                                        />
                                          }
                                          closeOnClick={true}
                                          hideProgressBar={false}
                                          newestOnTop={false}
                                          pauseOnHover={true}
                                          position="top-right"
                                          progressClassName=""
                                          style={null}
                                          toastClassName=""
                                          transition={[Function]}
                            />
                            <BreadCrumbComponent
                                          active_item="Categories/"
                            />
                            <SearchForm
                                          name_change={[Function]}
                                          search={[Function]}
                                          search_event={[Function]}
                                          search_placeholder="Search Categories"
                            />
                            <Row
                                          bsClass="row"
                                          componentClass="div"
                            >
                                          <Col
                                                        bsClass="col"
                                                        componentClass="div"
                                                        sm={4}
                                          >
                                                        <Button
                                                                      active={false}
                                                                      block={false}
                                                                      bsClass="btn"
                                                                      bsStyle="info"
                                                                      className="add-categories-btn"
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                        >
                                                                       
                                                                      <span>
                                                                                     Add recipe category 
                                                                      </span>
                                                                       
                                                        </Button>
                                          </Col>
                            </Row>
                            <div>
                                          <ReusableModal
                                                        btn_name="Add Category"
                                                        category_placeholder=" Category Name "
                                                        category_state="Add Category"
                                                        current_state={[Function]}
                                                        method={[Function]}
                                                        method_state={false}
                                                        onChange={[Function]}
                                          />
                                          <DeleteComponent
                                                        click_state={[Function]}
                                                        form_submit={[Function]}
                                                        item_state=""
                                                        modal_header={[Function]}
                                                        modal_title="Are you sure you want to delete this category?"
                                                        view_modal={undefined}
                                          />
                                          <ReusableModal
                                                        btn_name="Update"
                                                        category_placeholder=""
                                                        category_state="Edit Category"
                                                        category_value=""
                                                        current_state={[Function]}
                                                        method={[Function]}
                                                        method_state={undefined}
                                                        onChange={[Function]}
                                          />
                            </div>
                            <Row
                                          bsClass="row"
                                          componentClass="div"
                            >
                                          
                            </Row>
                            <div
                                          className="alert alert-danger"
                            >
                                          No categories on this land, kindly add them 
                            </div>
                            <Paginator
                                          next={[Function]}
                                          previous={[Function]}
                            />
              </div>
</div>,
            "className": "categories-parent-background",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="grid"
>
                <ToastContainer
                                autoClose={5000}
                                bodyClassName=""
                                className={null}
                                closeButton={
                                                <DefaultCloseButton
                                                                ariaLabel="close"
                                                />
                                }
                                closeOnClick={true}
                                hideProgressBar={false}
                                newestOnTop={false}
                                pauseOnHover={true}
                                position="top-right"
                                progressClassName=""
                                style={null}
                                toastClassName=""
                                transition={[Function]}
                />
                <BreadCrumbComponent
                                active_item="Categories/"
                />
                <SearchForm
                                name_change={[Function]}
                                search={[Function]}
                                search_event={[Function]}
                                search_placeholder="Search Categories"
                />
                <Row
                                bsClass="row"
                                componentClass="div"
                >
                                <Col
                                                bsClass="col"
                                                componentClass="div"
                                                sm={4}
                                >
                                                <Button
                                                                active={false}
                                                                block={false}
                                                                bsClass="btn"
                                                                bsStyle="info"
                                                                className="add-categories-btn"
                                                                disabled={false}
                                                                onClick={[Function]}
                                                >
                                                                 
                                                                <span>
                                                                                 Add recipe category 
                                                                </span>
                                                                 
                                                </Button>
                                </Col>
                </Row>
                <div>
                                <ReusableModal
                                                btn_name="Add Category"
                                                category_placeholder=" Category Name "
                                                category_state="Add Category"
                                                current_state={[Function]}
                                                method={[Function]}
                                                method_state={false}
                                                onChange={[Function]}
                                />
                                <DeleteComponent
                                                click_state={[Function]}
                                                form_submit={[Function]}
                                                item_state=""
                                                modal_header={[Function]}
                                                modal_title="Are you sure you want to delete this category?"
                                                view_modal={undefined}
                                />
                                <ReusableModal
                                                btn_name="Update"
                                                category_placeholder=""
                                                category_state="Edit Category"
                                                category_value=""
                                                current_state={[Function]}
                                                method={[Function]}
                                                method_state={undefined}
                                                onChange={[Function]}
                                />
                </div>
                <Row
                                bsClass="row"
                                componentClass="div"
                >
                                
                </Row>
                <div
                                className="alert alert-danger"
                >
                                No categories on this land, kindly add them 
                </div>
                <Paginator
                                next={[Function]}
                                previous={[Function]}
                />
</div>,
              "className": "categories-container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <ToastContainer
                    autoClose={5000}
                    bodyClassName=""
                    className={null}
                    closeButton={
                                        <DefaultCloseButton
                                                            ariaLabel="close"
                                        />
                    }
                    closeOnClick={true}
                    hideProgressBar={false}
                    newestOnTop={false}
                    pauseOnHover={true}
                    position="top-right"
                    progressClassName=""
                    style={null}
                    toastClassName=""
                    transition={[Function]}
/>,
                  <BreadCrumbComponent
                    active_item="Categories/"
/>,
                  <SearchForm
                    name_change={[Function]}
                    search={[Function]}
                    search_event={[Function]}
                    search_placeholder="Search Categories"
/>,
                  <Row
                    bsClass="row"
                    componentClass="div"
>
                    <Col
                                        bsClass="col"
                                        componentClass="div"
                                        sm={4}
                    >
                                        <Button
                                                            active={false}
                                                            block={false}
                                                            bsClass="btn"
                                                            bsStyle="info"
                                                            className="add-categories-btn"
                                                            disabled={false}
                                                            onClick={[Function]}
                                        >
                                                             
                                                            <span>
                                                                                 Add recipe category 
                                                            </span>
                                                             
                                        </Button>
                    </Col>
</Row>,
                  <div>
                    <ReusableModal
                                        btn_name="Add Category"
                                        category_placeholder=" Category Name "
                                        category_state="Add Category"
                                        current_state={[Function]}
                                        method={[Function]}
                                        method_state={false}
                                        onChange={[Function]}
                    />
                    <DeleteComponent
                                        click_state={[Function]}
                                        form_submit={[Function]}
                                        item_state=""
                                        modal_header={[Function]}
                                        modal_title="Are you sure you want to delete this category?"
                                        view_modal={undefined}
                    />
                    <ReusableModal
                                        btn_name="Update"
                                        category_placeholder=""
                                        category_state="Edit Category"
                                        category_value=""
                                        current_state={[Function]}
                                        method={[Function]}
                                        method_state={undefined}
                                        onChange={[Function]}
                    />
</div>,
                  <Row
                    bsClass="row"
                    componentClass="div"
>
                    
</Row>,
                  <div
                    className="alert alert-danger"
>
                    No categories on this land, kindly add them 
</div>,
                  <Paginator
                    next={[Function]}
                    previous={[Function]}
/>,
                ],
                "className": "grid",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoClose": 5000,
                    "bodyClassName": "",
                    "className": null,
                    "closeButton": <DefaultCloseButton
                      ariaLabel="close"
/>,
                    "closeOnClick": true,
                    "hideProgressBar": false,
                    "newestOnTop": false,
                    "pauseOnHover": true,
                    "position": "top-right",
                    "progressClassName": "",
                    "style": null,
                    "toastClassName": "",
                    "transition": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "active_item": "Categories/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "name_change": [Function],
                    "search": [Function],
                    "search_event": [Function],
                    "search_placeholder": "Search Categories",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "row",
                    "children": <Col
                      bsClass="col"
                      componentClass="div"
                      sm={4}
>
                      <Button
                                            active={false}
                                            block={false}
                                            bsClass="btn"
                                            bsStyle="info"
                                            className="add-categories-btn"
                                            disabled={false}
                                            onClick={[Function]}
                      >
                                             
                                            <span>
                                                                   Add recipe category 
                                            </span>
                                             
                      </Button>
</Col>,
                    "componentClass": "div",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="info"
                        className="add-categories-btn"
                        disabled={false}
                        onClick={[Function]}
>
                         
                        <span>
                                                 Add recipe category 
                        </span>
                         
</Button>,
                      "componentClass": "div",
                      "sm": 4,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "block": false,
                        "bsClass": "btn",
                        "bsStyle": "info",
                        "children": Array [
                          " ",
                          <span>
                             Add recipe category 
</span>,
                          " ",
                        ],
                        "className": "add-categories-btn",
                        "disabled": false,
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        " ",
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": " Add recipe category ",
                          },
                          "ref": null,
                          "rendered": " Add recipe category ",
                          "type": "span",
                        },
                        " ",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <ReusableModal
                        btn_name="Add Category"
                        category_placeholder=" Category Name "
                        category_state="Add Category"
                        current_state={[Function]}
                        method={[Function]}
                        method_state={false}
                        onChange={[Function]}
/>,
                      <DeleteComponent
                        click_state={[Function]}
                        form_submit={[Function]}
                        item_state=""
                        modal_header={[Function]}
                        modal_title="Are you sure you want to delete this category?"
                        view_modal={undefined}
/>,
                      <ReusableModal
                        btn_name="Update"
                        category_placeholder=""
                        category_state="Edit Category"
                        category_value=""
                        current_state={[Function]}
                        method={[Function]}
                        method_state={undefined}
                        onChange={[Function]}
/>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "btn_name": "Add Category",
                        "category_placeholder": " Category Name ",
                        "category_state": "Add Category",
                        "current_state": [Function],
                        "method": [Function],
                        "method_state": false,
                        "onChange": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "click_state": [Function],
                        "form_submit": [Function],
                        "item_state": "",
                        "modal_header": [Function],
                        "modal_title": "Are you sure you want to delete this category?",
                        "view_modal": undefined,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "btn_name": "Update",
                        "category_placeholder": "",
                        "category_state": "Edit Category",
                        "category_value": "",
                        "current_state": [Function],
                        "method": [Function],
                        "method_state": undefined,
                        "onChange": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "row",
                    "children": Array [],
                    "componentClass": "div",
                  },
                  "ref": null,
                  "rendered": Array [],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "No categories on this land, kindly add them ",
                    "className": "alert alert-danger",
                  },
                  "ref": null,
                  "rendered": "No categories on this land, kindly add them ",
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "next": [Function],
                    "previous": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "empty-div",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
